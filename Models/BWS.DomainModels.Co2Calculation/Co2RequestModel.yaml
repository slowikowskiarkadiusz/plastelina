channels:
  inbound-co2-calculation:
    description: The queue by which Co2Request domain models are delivered to DIP
    publish:
      summary: Receive a Co2Request domain model object from the outside
      message:
        $ref: '#/components/messages/Co2RequestMessage'

components:
  messages:
    Co2RequestMessage:
      name: Co2Request
      title: Co2Request
      summary: Co2Request description
      contentType: application/json
      payload:
        $ref: '#/components/schemas/BWS.DomainModels.Co2Calculation/Co2RequestModel'
  schemas:
    BWS.DomainModels.Co2Calculation:
      Co2RequestModel:
        description: Model that holds information necessary to perform CO2 emission calculations
        $id: Co2RequestModel
        confluencePageContentId: 611909639
        type: object
        nugets:
          - Newtonsoft.Json
        usings:
          - Newtonsoft.Json
          - Newtonsoft.Json.Converters
        properties:
          Reference:
            type: string
            description: Order reference number (for CarLo it is Transport Order number)
          DepartureAddress:
            $ref: '#/components/schemas/BWS.DomainModels.Co2Calculation/RequestAddress'
            description: Object representing details regarding departure address
          DestinationAddress:
            $ref: '#/components/schemas/BWS.DomainModels.Co2Calculation/RequestAddress'
            description: Object representing details regarding destination address
          PreDeliveryAddress:
            $ref: '#/components/schemas/BWS.DomainModels.Co2Calculation/RequestAddress'
            description: Object representing details regarding pre delivery address (address of warehouse from where cargo is delivered to port/airport/etc.)
          PostDeliveryAddress:
            $ref: '#/components/schemas/BWS.DomainModels.Co2Calculation/RequestAddress'
            description: Object representing details regarding post delivery address (address of warehouse from where cargo is delivered to port/airport/etc.)
          CargoWeight:
            type: number
            format: double
            description: Weight of cargo in kilograms
          ModeOfTransport:
            $ref: '#/components/schemas/BWS.DomainModels.Co2Calculation/ModeOfTransport'
            description: Mode of transport (sea/air/rail/road/other)
            attributes:
              - name: JsonConverter
                parameters:
                  - value: typeof(StringEnumConverter)
          FlightNumber:
            type: string
            description: Flight number (applicable to air)
          SeaLoadingType:
            $ref: '#/components/schemas/BWS.DomainModels.Co2Calculation/SeaCargoType'
            description: Type of cargo (applicable to sea)
            attributes:
              - name: JsonConverter
                parameters:
                  - value: typeof(StringEnumConverter)
          RoadLoadingType:
            $ref: '#/components/schemas/BWS.DomainModels.Co2Calculation/TruckLoad'
            description: Truckload type (applicable to road)
            attributes:
              - name: JsonConverter
                parameters:
                  - value: typeof(StringEnumConverter)
          EmissionClass:
            $ref: '#/components/schemas/BWS.DomainModels.Co2Calculation/RoadEmissionClass'
            description: Road emission class (applicable to road)
            attributes:
              - name: JsonConverter
                parameters:
                  - value: typeof(StringEnumConverter)
          LorryClass:
            $ref: '#/components/schemas/BWS.DomainModels.Co2Calculation/RoadLorryClass'
            description: Lorry class (applicable to road)
            attributes:
              - name: JsonConverter
                parameters:
                  - value: typeof(StringEnumConverter)
          TrainType:
            $ref: '#/components/schemas/BWS.DomainModels.Co2Calculation/TrainType'
            description: Train type (applicable to rail)
            attributes:
              - name: JsonConverter
                parameters:
                  - value: typeof(StringEnumConverter)
          LoadFactor:
            type: number
            format: double
            description: A number that indcates how much cargo space is used
          VehicleType:
            type: string
            description: Vehicle type
        required:
          - Reference
          - DepartureAddress
          - DestinationAddress
          - CargoWeight
          - ModeOfTransport
